// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © lumduan
//@version=6

// For S50 TFEX Strategy Timeframe 30 minutes 
import candythink/MonthlyProfitTable/5 as MonthlyProfitTable   	

// ————— Constants
float RISK_FREE_RATE = 2.0 // Risk-free rate for calculating Sharpe ratio
HIGH_PRICE_BAR_COLOR = color.green
LOW_PRICE_BAR_COLOR = color.red
int HIGH_PRICE_BAR_WIDTH = 1
int LOW_PRICE_BAR_WIDTH = 1

int CONTACT_PER_ORDER = 1
float COMMISSION_PRICE = 85.0 //THB

// Inputs for configuring the bar extreme calculation
int lookbackBars = input(23, title="Lookback Bars") // Number of bars to look back for extreme detection
int riskPercent = input(1, title="Risk % per Trade") / 100
int atrLength = input(10, title="ATR Length")
int riskRewardRatio = input(8, title="Risk-Reward Ratio")
int prec      = input(2, title = "Return Precision") // Precision of return percentages
bool show_table = input.bool(defval = true, title = "Show Return Rate Table On/Off") // Show or hide the table

strategy(title = "S50 TFEX Strategy With ATR",overlay = true, calc_on_every_tick = true, default_qty_type = strategy.fixed, default_qty_value = CONTACT_PER_ORDER, commission_type = strategy.commission.cash_per_contract, commission_value = COMMISSION_PRICE , risk_free_rate = RISK_FREE_RATE)

// ATR Calculation
atr = ta.atr(atrLength)

// Account Equity & Risk Per Trade
strategy_equity = strategy.equity
riskAmount = strategy_equity * riskPercent

// Bar 21 Extreme Detection Logic
// Check if bar 21 close is highest/lowest from close in 23 bars
isLongSignal = false
isShortSignal = false

if bar_index >= 22 // Ensure we have enough historical data (need bars 0-22)
    // Check if close[21] is the highest among 23 closes (close[0] to close[22])
    highestClose = close[21]
    for i = 0 to 22
        if close[i] > highestClose
            highestClose := close[i]
    isLongSignal := close[21] == highestClose
    
    // Check if close[21] is the lowest among 23 closes (close[0] to close[22])
    lowestClose = close[21]
    for i = 0 to 22
        if close[i] < lowestClose
            lowestClose := close[i]
    isShortSignal := close[21] == lowestClose

// Track entry prices for stop/take profit calculations
var float entryHigh = na
var float entryLow = na

if isLongSignal
    entryHigh := high[21]
if isShortSignal
    entryLow := low[21]

// Initialize high and low price variables for plotting
float highPrice = 0.0
highPrice := isLongSignal ? high[21] : highPrice[1] // Update high price if a long signal is detected

float lowPrice = 0.0
lowPrice := isShortSignal ? low[21] : lowPrice[1] // Update low price if a short signal is detected

// Stop-Loss and Take-Profit Calculation
longStop = not na(entryLow) ? entryLow - atr : na
shortStop = not na(entryHigh) ? entryHigh + atr : na

longTakeProfit = not na(entryHigh) ? entryHigh + atr * riskRewardRatio : na
shortTakeProfit = not na(entryLow) ? entryLow - atr * riskRewardRatio : na

// Position Sizing: Contracts based on risk
longContracts = not na(entryHigh) and not na(longStop) ? riskAmount / (entryHigh - longStop) : 0
shortContracts = not na(entryLow) and not na(shortStop) ? riskAmount / (shortStop - entryLow) : 0

// Long Entry
if isLongSignal
    strategy.entry("Long", strategy.long, qty=longContracts, stop=entryHigh + syminfo.mintick, comment = "Long")
    strategy.exit("Long Exit", from_entry="Long", stop=longStop, limit=longTakeProfit, comment = "Long Exit")

// Short Entry
if isShortSignal
    strategy.entry("Short", strategy.short, qty=shortContracts, stop=entryLow - syminfo.mintick, comment = "Short")
    strategy.exit("Short Exit", from_entry="Short", stop=shortStop, limit=shortTakeProfit, comment = "Short Exit")

// Plot high and low prices on the chart
plot(highPrice, color = HIGH_PRICE_BAR_COLOR, linewidth = HIGH_PRICE_BAR_WIDTH)
plot(lowPrice, color = LOW_PRICE_BAR_COLOR,   linewidth = LOW_PRICE_BAR_WIDTH)

// Plot Take Profit
plot(not na(longTakeProfit) ? longTakeProfit : na, title="Long Take-Profit", color=color.rgb(0, 240, 164, 50), linewidth=1, style=plot.style_stepline)
plot(not na(shortTakeProfit) ? shortTakeProfit : na, title="Short Take-Profit", color=color.rgb(0, 240, 164, 50), linewidth=1, style=plot.style_stepline)


// ======= TABLE =====
float equity = strategy.equity
MonthlyProfitTable.ProfitTable(equity)